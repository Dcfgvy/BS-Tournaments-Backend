name: Build and Deploy Backend Docker Image

on:
  push:
    branches:
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Log in to Docker registry
    - name: Log in to Docker registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build the Docker image
    - name: Build Docker image
      run: docker build -t bs-tournaments-backend:${{ github.sha }} -f Dockerfile.prod .

    # Push the Docker image to the registry
    - name: Push Docker image
      run: |
        docker tag bs-tournaments-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/bs-tournaments-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/bs-tournaments-backend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/bs-tournaments-backend:${{ github.sha }}
    
    # Deploy to the server
    - name: Deploy to server
      env:
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/bs-tournaments-backend:${{ github.sha }}
        # SERVER_DEPLOY_PATH in format "/path-to-dir", e.g. "/usr/src/app"
      run: |
        echo "${{ secrets.SERVER_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_HOST }} << EOF
        docker pull $DOCKER_IMAGE
        docker stop bs-tournaments-backend || true
        docker rm bs-tournaments-backend || true
        # Create the directory on the server if it doesn't exist
        mkdir -p ${{ secrets.SERVER_DEPLOY_PATH }}/uploaded/images
        # Run the container with a bind mount for the images directory
        docker run -d --name bs-tournaments-backend \
          --env-file ${{ secrets.SERVER_DEPLOY_PATH }}/.env \
          -p 3001:3001 \
          -v ${{ secrets.SERVER_DEPLOY_PATH }}/uploaded/images:/usr/src/app/uploaded/images \
          $DOCKER_IMAGE
        EOF
        rm -f private_key.pem
